/*
aiproductdataenhancer/service.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aiproductdataenhancer

import (
	"encoding/json"
)

// checks if the AiproductdataenhancerFillProductDataRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AiproductdataenhancerFillProductDataRequest{}

// AiproductdataenhancerFillProductDataRequest struct for AiproductdataenhancerFillProductDataRequest
type AiproductdataenhancerFillProductDataRequest struct {
	TenantId *string `json:"tenantId,omitempty"`
	LanguageCode *AiproductdataenhancerLanguageCode `json:"languageCode,omitempty"`
	ProductInformation *AiproductdataenhancerProductInformation `json:"productInformation,omitempty"`
	ProductDataToFill []AiproductdataenhancerProductDataToFill `json:"productDataToFill,omitempty"`
	DomainsToInclude []string `json:"domainsToInclude,omitempty"`
	DomainsToExclude []string `json:"domainsToExclude,omitempty"`
}

// NewAiproductdataenhancerFillProductDataRequest instantiates a new AiproductdataenhancerFillProductDataRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAiproductdataenhancerFillProductDataRequest() *AiproductdataenhancerFillProductDataRequest {
	this := AiproductdataenhancerFillProductDataRequest{}
	var languageCode AiproductdataenhancerLanguageCode = AIPRODUCTDATAENHANCERLANGUAGECODE_UNKNOWN
	this.LanguageCode = &languageCode
	return &this
}

// NewAiproductdataenhancerFillProductDataRequestWithDefaults instantiates a new AiproductdataenhancerFillProductDataRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAiproductdataenhancerFillProductDataRequestWithDefaults() *AiproductdataenhancerFillProductDataRequest {
	this := AiproductdataenhancerFillProductDataRequest{}
	var languageCode AiproductdataenhancerLanguageCode = AIPRODUCTDATAENHANCERLANGUAGECODE_UNKNOWN
	this.LanguageCode = &languageCode
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *AiproductdataenhancerFillProductDataRequest) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiproductdataenhancerFillProductDataRequest) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *AiproductdataenhancerFillProductDataRequest) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *AiproductdataenhancerFillProductDataRequest) SetTenantId(v string) {
	o.TenantId = &v
}

// GetLanguageCode returns the LanguageCode field value if set, zero value otherwise.
func (o *AiproductdataenhancerFillProductDataRequest) GetLanguageCode() AiproductdataenhancerLanguageCode {
	if o == nil || IsNil(o.LanguageCode) {
		var ret AiproductdataenhancerLanguageCode
		return ret
	}
	return *o.LanguageCode
}

// GetLanguageCodeOk returns a tuple with the LanguageCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiproductdataenhancerFillProductDataRequest) GetLanguageCodeOk() (*AiproductdataenhancerLanguageCode, bool) {
	if o == nil || IsNil(o.LanguageCode) {
		return nil, false
	}
	return o.LanguageCode, true
}

// HasLanguageCode returns a boolean if a field has been set.
func (o *AiproductdataenhancerFillProductDataRequest) HasLanguageCode() bool {
	if o != nil && !IsNil(o.LanguageCode) {
		return true
	}

	return false
}

// SetLanguageCode gets a reference to the given AiproductdataenhancerLanguageCode and assigns it to the LanguageCode field.
func (o *AiproductdataenhancerFillProductDataRequest) SetLanguageCode(v AiproductdataenhancerLanguageCode) {
	o.LanguageCode = &v
}

// GetProductInformation returns the ProductInformation field value if set, zero value otherwise.
func (o *AiproductdataenhancerFillProductDataRequest) GetProductInformation() AiproductdataenhancerProductInformation {
	if o == nil || IsNil(o.ProductInformation) {
		var ret AiproductdataenhancerProductInformation
		return ret
	}
	return *o.ProductInformation
}

// GetProductInformationOk returns a tuple with the ProductInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiproductdataenhancerFillProductDataRequest) GetProductInformationOk() (*AiproductdataenhancerProductInformation, bool) {
	if o == nil || IsNil(o.ProductInformation) {
		return nil, false
	}
	return o.ProductInformation, true
}

// HasProductInformation returns a boolean if a field has been set.
func (o *AiproductdataenhancerFillProductDataRequest) HasProductInformation() bool {
	if o != nil && !IsNil(o.ProductInformation) {
		return true
	}

	return false
}

// SetProductInformation gets a reference to the given AiproductdataenhancerProductInformation and assigns it to the ProductInformation field.
func (o *AiproductdataenhancerFillProductDataRequest) SetProductInformation(v AiproductdataenhancerProductInformation) {
	o.ProductInformation = &v
}

// GetProductDataToFill returns the ProductDataToFill field value if set, zero value otherwise.
func (o *AiproductdataenhancerFillProductDataRequest) GetProductDataToFill() []AiproductdataenhancerProductDataToFill {
	if o == nil || IsNil(o.ProductDataToFill) {
		var ret []AiproductdataenhancerProductDataToFill
		return ret
	}
	return o.ProductDataToFill
}

// GetProductDataToFillOk returns a tuple with the ProductDataToFill field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiproductdataenhancerFillProductDataRequest) GetProductDataToFillOk() ([]AiproductdataenhancerProductDataToFill, bool) {
	if o == nil || IsNil(o.ProductDataToFill) {
		return nil, false
	}
	return o.ProductDataToFill, true
}

// HasProductDataToFill returns a boolean if a field has been set.
func (o *AiproductdataenhancerFillProductDataRequest) HasProductDataToFill() bool {
	if o != nil && !IsNil(o.ProductDataToFill) {
		return true
	}

	return false
}

// SetProductDataToFill gets a reference to the given []AiproductdataenhancerProductDataToFill and assigns it to the ProductDataToFill field.
func (o *AiproductdataenhancerFillProductDataRequest) SetProductDataToFill(v []AiproductdataenhancerProductDataToFill) {
	o.ProductDataToFill = v
}

// GetDomainsToInclude returns the DomainsToInclude field value if set, zero value otherwise.
func (o *AiproductdataenhancerFillProductDataRequest) GetDomainsToInclude() []string {
	if o == nil || IsNil(o.DomainsToInclude) {
		var ret []string
		return ret
	}
	return o.DomainsToInclude
}

// GetDomainsToIncludeOk returns a tuple with the DomainsToInclude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiproductdataenhancerFillProductDataRequest) GetDomainsToIncludeOk() ([]string, bool) {
	if o == nil || IsNil(o.DomainsToInclude) {
		return nil, false
	}
	return o.DomainsToInclude, true
}

// HasDomainsToInclude returns a boolean if a field has been set.
func (o *AiproductdataenhancerFillProductDataRequest) HasDomainsToInclude() bool {
	if o != nil && !IsNil(o.DomainsToInclude) {
		return true
	}

	return false
}

// SetDomainsToInclude gets a reference to the given []string and assigns it to the DomainsToInclude field.
func (o *AiproductdataenhancerFillProductDataRequest) SetDomainsToInclude(v []string) {
	o.DomainsToInclude = v
}

// GetDomainsToExclude returns the DomainsToExclude field value if set, zero value otherwise.
func (o *AiproductdataenhancerFillProductDataRequest) GetDomainsToExclude() []string {
	if o == nil || IsNil(o.DomainsToExclude) {
		var ret []string
		return ret
	}
	return o.DomainsToExclude
}

// GetDomainsToExcludeOk returns a tuple with the DomainsToExclude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiproductdataenhancerFillProductDataRequest) GetDomainsToExcludeOk() ([]string, bool) {
	if o == nil || IsNil(o.DomainsToExclude) {
		return nil, false
	}
	return o.DomainsToExclude, true
}

// HasDomainsToExclude returns a boolean if a field has been set.
func (o *AiproductdataenhancerFillProductDataRequest) HasDomainsToExclude() bool {
	if o != nil && !IsNil(o.DomainsToExclude) {
		return true
	}

	return false
}

// SetDomainsToExclude gets a reference to the given []string and assigns it to the DomainsToExclude field.
func (o *AiproductdataenhancerFillProductDataRequest) SetDomainsToExclude(v []string) {
	o.DomainsToExclude = v
}

func (o AiproductdataenhancerFillProductDataRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AiproductdataenhancerFillProductDataRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.LanguageCode) {
		toSerialize["languageCode"] = o.LanguageCode
	}
	if !IsNil(o.ProductInformation) {
		toSerialize["productInformation"] = o.ProductInformation
	}
	if !IsNil(o.ProductDataToFill) {
		toSerialize["productDataToFill"] = o.ProductDataToFill
	}
	if !IsNil(o.DomainsToInclude) {
		toSerialize["domainsToInclude"] = o.DomainsToInclude
	}
	if !IsNil(o.DomainsToExclude) {
		toSerialize["domainsToExclude"] = o.DomainsToExclude
	}
	return toSerialize, nil
}

type NullableAiproductdataenhancerFillProductDataRequest struct {
	value *AiproductdataenhancerFillProductDataRequest
	isSet bool
}

func (v NullableAiproductdataenhancerFillProductDataRequest) Get() *AiproductdataenhancerFillProductDataRequest {
	return v.value
}

func (v *NullableAiproductdataenhancerFillProductDataRequest) Set(val *AiproductdataenhancerFillProductDataRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAiproductdataenhancerFillProductDataRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAiproductdataenhancerFillProductDataRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAiproductdataenhancerFillProductDataRequest(val *AiproductdataenhancerFillProductDataRequest) *NullableAiproductdataenhancerFillProductDataRequest {
	return &NullableAiproductdataenhancerFillProductDataRequest{value: val, isSet: true}
}

func (v NullableAiproductdataenhancerFillProductDataRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAiproductdataenhancerFillProductDataRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


