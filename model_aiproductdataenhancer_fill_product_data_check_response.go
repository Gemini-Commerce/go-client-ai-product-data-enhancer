/*
aiproductdataenhancer/service.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aiproductdataenhancer

import (
	"encoding/json"
)

// checks if the AiproductdataenhancerFillProductDataCheckResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AiproductdataenhancerFillProductDataCheckResponse{}

// AiproductdataenhancerFillProductDataCheckResponse struct for AiproductdataenhancerFillProductDataCheckResponse
type AiproductdataenhancerFillProductDataCheckResponse struct {
	ProductDataFilled *map[string]string `json:"productDataFilled,omitempty"`
	ConfidenceRate *float32 `json:"confidenceRate,omitempty"`
	CompletionRate *float32 `json:"completionRate,omitempty"`
	Status *AiproductdataenhancerJobStatus `json:"status,omitempty"`
	Error *AiproductdataenhancerError `json:"error,omitempty"`
}

// NewAiproductdataenhancerFillProductDataCheckResponse instantiates a new AiproductdataenhancerFillProductDataCheckResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAiproductdataenhancerFillProductDataCheckResponse() *AiproductdataenhancerFillProductDataCheckResponse {
	this := AiproductdataenhancerFillProductDataCheckResponse{}
	var status AiproductdataenhancerJobStatus = AIPRODUCTDATAENHANCERJOBSTATUS_UNKNOWN
	this.Status = &status
	return &this
}

// NewAiproductdataenhancerFillProductDataCheckResponseWithDefaults instantiates a new AiproductdataenhancerFillProductDataCheckResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAiproductdataenhancerFillProductDataCheckResponseWithDefaults() *AiproductdataenhancerFillProductDataCheckResponse {
	this := AiproductdataenhancerFillProductDataCheckResponse{}
	var status AiproductdataenhancerJobStatus = AIPRODUCTDATAENHANCERJOBSTATUS_UNKNOWN
	this.Status = &status
	return &this
}

// GetProductDataFilled returns the ProductDataFilled field value if set, zero value otherwise.
func (o *AiproductdataenhancerFillProductDataCheckResponse) GetProductDataFilled() map[string]string {
	if o == nil || IsNil(o.ProductDataFilled) {
		var ret map[string]string
		return ret
	}
	return *o.ProductDataFilled
}

// GetProductDataFilledOk returns a tuple with the ProductDataFilled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiproductdataenhancerFillProductDataCheckResponse) GetProductDataFilledOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ProductDataFilled) {
		return nil, false
	}
	return o.ProductDataFilled, true
}

// HasProductDataFilled returns a boolean if a field has been set.
func (o *AiproductdataenhancerFillProductDataCheckResponse) HasProductDataFilled() bool {
	if o != nil && !IsNil(o.ProductDataFilled) {
		return true
	}

	return false
}

// SetProductDataFilled gets a reference to the given map[string]string and assigns it to the ProductDataFilled field.
func (o *AiproductdataenhancerFillProductDataCheckResponse) SetProductDataFilled(v map[string]string) {
	o.ProductDataFilled = &v
}

// GetConfidenceRate returns the ConfidenceRate field value if set, zero value otherwise.
func (o *AiproductdataenhancerFillProductDataCheckResponse) GetConfidenceRate() float32 {
	if o == nil || IsNil(o.ConfidenceRate) {
		var ret float32
		return ret
	}
	return *o.ConfidenceRate
}

// GetConfidenceRateOk returns a tuple with the ConfidenceRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiproductdataenhancerFillProductDataCheckResponse) GetConfidenceRateOk() (*float32, bool) {
	if o == nil || IsNil(o.ConfidenceRate) {
		return nil, false
	}
	return o.ConfidenceRate, true
}

// HasConfidenceRate returns a boolean if a field has been set.
func (o *AiproductdataenhancerFillProductDataCheckResponse) HasConfidenceRate() bool {
	if o != nil && !IsNil(o.ConfidenceRate) {
		return true
	}

	return false
}

// SetConfidenceRate gets a reference to the given float32 and assigns it to the ConfidenceRate field.
func (o *AiproductdataenhancerFillProductDataCheckResponse) SetConfidenceRate(v float32) {
	o.ConfidenceRate = &v
}

// GetCompletionRate returns the CompletionRate field value if set, zero value otherwise.
func (o *AiproductdataenhancerFillProductDataCheckResponse) GetCompletionRate() float32 {
	if o == nil || IsNil(o.CompletionRate) {
		var ret float32
		return ret
	}
	return *o.CompletionRate
}

// GetCompletionRateOk returns a tuple with the CompletionRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiproductdataenhancerFillProductDataCheckResponse) GetCompletionRateOk() (*float32, bool) {
	if o == nil || IsNil(o.CompletionRate) {
		return nil, false
	}
	return o.CompletionRate, true
}

// HasCompletionRate returns a boolean if a field has been set.
func (o *AiproductdataenhancerFillProductDataCheckResponse) HasCompletionRate() bool {
	if o != nil && !IsNil(o.CompletionRate) {
		return true
	}

	return false
}

// SetCompletionRate gets a reference to the given float32 and assigns it to the CompletionRate field.
func (o *AiproductdataenhancerFillProductDataCheckResponse) SetCompletionRate(v float32) {
	o.CompletionRate = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AiproductdataenhancerFillProductDataCheckResponse) GetStatus() AiproductdataenhancerJobStatus {
	if o == nil || IsNil(o.Status) {
		var ret AiproductdataenhancerJobStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiproductdataenhancerFillProductDataCheckResponse) GetStatusOk() (*AiproductdataenhancerJobStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AiproductdataenhancerFillProductDataCheckResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given AiproductdataenhancerJobStatus and assigns it to the Status field.
func (o *AiproductdataenhancerFillProductDataCheckResponse) SetStatus(v AiproductdataenhancerJobStatus) {
	o.Status = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *AiproductdataenhancerFillProductDataCheckResponse) GetError() AiproductdataenhancerError {
	if o == nil || IsNil(o.Error) {
		var ret AiproductdataenhancerError
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiproductdataenhancerFillProductDataCheckResponse) GetErrorOk() (*AiproductdataenhancerError, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *AiproductdataenhancerFillProductDataCheckResponse) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given AiproductdataenhancerError and assigns it to the Error field.
func (o *AiproductdataenhancerFillProductDataCheckResponse) SetError(v AiproductdataenhancerError) {
	o.Error = &v
}

func (o AiproductdataenhancerFillProductDataCheckResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AiproductdataenhancerFillProductDataCheckResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProductDataFilled) {
		toSerialize["productDataFilled"] = o.ProductDataFilled
	}
	if !IsNil(o.ConfidenceRate) {
		toSerialize["confidenceRate"] = o.ConfidenceRate
	}
	if !IsNil(o.CompletionRate) {
		toSerialize["completionRate"] = o.CompletionRate
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	return toSerialize, nil
}

type NullableAiproductdataenhancerFillProductDataCheckResponse struct {
	value *AiproductdataenhancerFillProductDataCheckResponse
	isSet bool
}

func (v NullableAiproductdataenhancerFillProductDataCheckResponse) Get() *AiproductdataenhancerFillProductDataCheckResponse {
	return v.value
}

func (v *NullableAiproductdataenhancerFillProductDataCheckResponse) Set(val *AiproductdataenhancerFillProductDataCheckResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAiproductdataenhancerFillProductDataCheckResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAiproductdataenhancerFillProductDataCheckResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAiproductdataenhancerFillProductDataCheckResponse(val *AiproductdataenhancerFillProductDataCheckResponse) *NullableAiproductdataenhancerFillProductDataCheckResponse {
	return &NullableAiproductdataenhancerFillProductDataCheckResponse{value: val, isSet: true}
}

func (v NullableAiproductdataenhancerFillProductDataCheckResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAiproductdataenhancerFillProductDataCheckResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


