/*
aiproductdataenhancer/service.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aiproductdataenhancer

import (
	"encoding/json"
)

// checks if the AiproductdataenhancerDataToTranslate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AiproductdataenhancerDataToTranslate{}

// AiproductdataenhancerDataToTranslate struct for AiproductdataenhancerDataToTranslate
type AiproductdataenhancerDataToTranslate struct {
	Name *string `json:"name,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewAiproductdataenhancerDataToTranslate instantiates a new AiproductdataenhancerDataToTranslate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAiproductdataenhancerDataToTranslate() *AiproductdataenhancerDataToTranslate {
	this := AiproductdataenhancerDataToTranslate{}
	return &this
}

// NewAiproductdataenhancerDataToTranslateWithDefaults instantiates a new AiproductdataenhancerDataToTranslate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAiproductdataenhancerDataToTranslateWithDefaults() *AiproductdataenhancerDataToTranslate {
	this := AiproductdataenhancerDataToTranslate{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AiproductdataenhancerDataToTranslate) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiproductdataenhancerDataToTranslate) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AiproductdataenhancerDataToTranslate) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AiproductdataenhancerDataToTranslate) SetName(v string) {
	o.Name = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *AiproductdataenhancerDataToTranslate) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiproductdataenhancerDataToTranslate) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *AiproductdataenhancerDataToTranslate) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *AiproductdataenhancerDataToTranslate) SetValue(v string) {
	o.Value = &v
}

func (o AiproductdataenhancerDataToTranslate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AiproductdataenhancerDataToTranslate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableAiproductdataenhancerDataToTranslate struct {
	value *AiproductdataenhancerDataToTranslate
	isSet bool
}

func (v NullableAiproductdataenhancerDataToTranslate) Get() *AiproductdataenhancerDataToTranslate {
	return v.value
}

func (v *NullableAiproductdataenhancerDataToTranslate) Set(val *AiproductdataenhancerDataToTranslate) {
	v.value = val
	v.isSet = true
}

func (v NullableAiproductdataenhancerDataToTranslate) IsSet() bool {
	return v.isSet
}

func (v *NullableAiproductdataenhancerDataToTranslate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAiproductdataenhancerDataToTranslate(val *AiproductdataenhancerDataToTranslate) *NullableAiproductdataenhancerDataToTranslate {
	return &NullableAiproductdataenhancerDataToTranslate{value: val, isSet: true}
}

func (v NullableAiproductdataenhancerDataToTranslate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAiproductdataenhancerDataToTranslate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


