/*
aiproductdataenhancer/service.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aiproductdataenhancer

import (
	"encoding/json"
)

// checks if the AiproductdataenhancerFillProductDataResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AiproductdataenhancerFillProductDataResponse{}

// AiproductdataenhancerFillProductDataResponse struct for AiproductdataenhancerFillProductDataResponse
type AiproductdataenhancerFillProductDataResponse struct {
	ProductDataFilled *map[string]string `json:"productDataFilled,omitempty"`
	ConfidenceRate *float32 `json:"confidenceRate,omitempty"`
	CompletionRate *float32 `json:"completionRate,omitempty"`
}

// NewAiproductdataenhancerFillProductDataResponse instantiates a new AiproductdataenhancerFillProductDataResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAiproductdataenhancerFillProductDataResponse() *AiproductdataenhancerFillProductDataResponse {
	this := AiproductdataenhancerFillProductDataResponse{}
	return &this
}

// NewAiproductdataenhancerFillProductDataResponseWithDefaults instantiates a new AiproductdataenhancerFillProductDataResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAiproductdataenhancerFillProductDataResponseWithDefaults() *AiproductdataenhancerFillProductDataResponse {
	this := AiproductdataenhancerFillProductDataResponse{}
	return &this
}

// GetProductDataFilled returns the ProductDataFilled field value if set, zero value otherwise.
func (o *AiproductdataenhancerFillProductDataResponse) GetProductDataFilled() map[string]string {
	if o == nil || IsNil(o.ProductDataFilled) {
		var ret map[string]string
		return ret
	}
	return *o.ProductDataFilled
}

// GetProductDataFilledOk returns a tuple with the ProductDataFilled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiproductdataenhancerFillProductDataResponse) GetProductDataFilledOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ProductDataFilled) {
		return nil, false
	}
	return o.ProductDataFilled, true
}

// HasProductDataFilled returns a boolean if a field has been set.
func (o *AiproductdataenhancerFillProductDataResponse) HasProductDataFilled() bool {
	if o != nil && !IsNil(o.ProductDataFilled) {
		return true
	}

	return false
}

// SetProductDataFilled gets a reference to the given map[string]string and assigns it to the ProductDataFilled field.
func (o *AiproductdataenhancerFillProductDataResponse) SetProductDataFilled(v map[string]string) {
	o.ProductDataFilled = &v
}

// GetConfidenceRate returns the ConfidenceRate field value if set, zero value otherwise.
func (o *AiproductdataenhancerFillProductDataResponse) GetConfidenceRate() float32 {
	if o == nil || IsNil(o.ConfidenceRate) {
		var ret float32
		return ret
	}
	return *o.ConfidenceRate
}

// GetConfidenceRateOk returns a tuple with the ConfidenceRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiproductdataenhancerFillProductDataResponse) GetConfidenceRateOk() (*float32, bool) {
	if o == nil || IsNil(o.ConfidenceRate) {
		return nil, false
	}
	return o.ConfidenceRate, true
}

// HasConfidenceRate returns a boolean if a field has been set.
func (o *AiproductdataenhancerFillProductDataResponse) HasConfidenceRate() bool {
	if o != nil && !IsNil(o.ConfidenceRate) {
		return true
	}

	return false
}

// SetConfidenceRate gets a reference to the given float32 and assigns it to the ConfidenceRate field.
func (o *AiproductdataenhancerFillProductDataResponse) SetConfidenceRate(v float32) {
	o.ConfidenceRate = &v
}

// GetCompletionRate returns the CompletionRate field value if set, zero value otherwise.
func (o *AiproductdataenhancerFillProductDataResponse) GetCompletionRate() float32 {
	if o == nil || IsNil(o.CompletionRate) {
		var ret float32
		return ret
	}
	return *o.CompletionRate
}

// GetCompletionRateOk returns a tuple with the CompletionRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiproductdataenhancerFillProductDataResponse) GetCompletionRateOk() (*float32, bool) {
	if o == nil || IsNil(o.CompletionRate) {
		return nil, false
	}
	return o.CompletionRate, true
}

// HasCompletionRate returns a boolean if a field has been set.
func (o *AiproductdataenhancerFillProductDataResponse) HasCompletionRate() bool {
	if o != nil && !IsNil(o.CompletionRate) {
		return true
	}

	return false
}

// SetCompletionRate gets a reference to the given float32 and assigns it to the CompletionRate field.
func (o *AiproductdataenhancerFillProductDataResponse) SetCompletionRate(v float32) {
	o.CompletionRate = &v
}

func (o AiproductdataenhancerFillProductDataResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AiproductdataenhancerFillProductDataResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProductDataFilled) {
		toSerialize["productDataFilled"] = o.ProductDataFilled
	}
	if !IsNil(o.ConfidenceRate) {
		toSerialize["confidenceRate"] = o.ConfidenceRate
	}
	if !IsNil(o.CompletionRate) {
		toSerialize["completionRate"] = o.CompletionRate
	}
	return toSerialize, nil
}

type NullableAiproductdataenhancerFillProductDataResponse struct {
	value *AiproductdataenhancerFillProductDataResponse
	isSet bool
}

func (v NullableAiproductdataenhancerFillProductDataResponse) Get() *AiproductdataenhancerFillProductDataResponse {
	return v.value
}

func (v *NullableAiproductdataenhancerFillProductDataResponse) Set(val *AiproductdataenhancerFillProductDataResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAiproductdataenhancerFillProductDataResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAiproductdataenhancerFillProductDataResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAiproductdataenhancerFillProductDataResponse(val *AiproductdataenhancerFillProductDataResponse) *NullableAiproductdataenhancerFillProductDataResponse {
	return &NullableAiproductdataenhancerFillProductDataResponse{value: val, isSet: true}
}

func (v NullableAiproductdataenhancerFillProductDataResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAiproductdataenhancerFillProductDataResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


