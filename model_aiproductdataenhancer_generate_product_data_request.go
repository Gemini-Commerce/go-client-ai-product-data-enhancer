/*
aiproductdataenhancer/service.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aiproductdataenhancer

import (
	"encoding/json"
)

// checks if the AiproductdataenhancerGenerateProductDataRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AiproductdataenhancerGenerateProductDataRequest{}

// AiproductdataenhancerGenerateProductDataRequest struct for AiproductdataenhancerGenerateProductDataRequest
type AiproductdataenhancerGenerateProductDataRequest struct {
	TenantId              *string                                                             `json:"tenantId,omitempty"`
	LanguageCode          *AiproductdataenhancerLanguageCode                                  `json:"languageCode,omitempty"`
	ProductInformation    []AiproductdataenhancerGenerateProductDataRequestProductInformation `json:"productInformation,omitempty"`
	ProductDataToGenerate []GenerateProductDataRequestProductDataToGenerate                   `json:"productDataToGenerate,omitempty"`
	AdditionalProperties  map[string]interface{}
}

type _AiproductdataenhancerGenerateProductDataRequest AiproductdataenhancerGenerateProductDataRequest

// NewAiproductdataenhancerGenerateProductDataRequest instantiates a new AiproductdataenhancerGenerateProductDataRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAiproductdataenhancerGenerateProductDataRequest() *AiproductdataenhancerGenerateProductDataRequest {
	this := AiproductdataenhancerGenerateProductDataRequest{}
	var languageCode AiproductdataenhancerLanguageCode = AIPRODUCTDATAENHANCERLANGUAGECODE_UNKNOWN
	this.LanguageCode = &languageCode
	return &this
}

// NewAiproductdataenhancerGenerateProductDataRequestWithDefaults instantiates a new AiproductdataenhancerGenerateProductDataRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAiproductdataenhancerGenerateProductDataRequestWithDefaults() *AiproductdataenhancerGenerateProductDataRequest {
	this := AiproductdataenhancerGenerateProductDataRequest{}
	var languageCode AiproductdataenhancerLanguageCode = AIPRODUCTDATAENHANCERLANGUAGECODE_UNKNOWN
	this.LanguageCode = &languageCode
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *AiproductdataenhancerGenerateProductDataRequest) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiproductdataenhancerGenerateProductDataRequest) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *AiproductdataenhancerGenerateProductDataRequest) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *AiproductdataenhancerGenerateProductDataRequest) SetTenantId(v string) {
	o.TenantId = &v
}

// GetLanguageCode returns the LanguageCode field value if set, zero value otherwise.
func (o *AiproductdataenhancerGenerateProductDataRequest) GetLanguageCode() AiproductdataenhancerLanguageCode {
	if o == nil || IsNil(o.LanguageCode) {
		var ret AiproductdataenhancerLanguageCode
		return ret
	}
	return *o.LanguageCode
}

// GetLanguageCodeOk returns a tuple with the LanguageCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiproductdataenhancerGenerateProductDataRequest) GetLanguageCodeOk() (*AiproductdataenhancerLanguageCode, bool) {
	if o == nil || IsNil(o.LanguageCode) {
		return nil, false
	}
	return o.LanguageCode, true
}

// HasLanguageCode returns a boolean if a field has been set.
func (o *AiproductdataenhancerGenerateProductDataRequest) HasLanguageCode() bool {
	if o != nil && !IsNil(o.LanguageCode) {
		return true
	}

	return false
}

// SetLanguageCode gets a reference to the given AiproductdataenhancerLanguageCode and assigns it to the LanguageCode field.
func (o *AiproductdataenhancerGenerateProductDataRequest) SetLanguageCode(v AiproductdataenhancerLanguageCode) {
	o.LanguageCode = &v
}

// GetProductInformation returns the ProductInformation field value if set, zero value otherwise.
func (o *AiproductdataenhancerGenerateProductDataRequest) GetProductInformation() []AiproductdataenhancerGenerateProductDataRequestProductInformation {
	if o == nil || IsNil(o.ProductInformation) {
		var ret []AiproductdataenhancerGenerateProductDataRequestProductInformation
		return ret
	}
	return o.ProductInformation
}

// GetProductInformationOk returns a tuple with the ProductInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiproductdataenhancerGenerateProductDataRequest) GetProductInformationOk() ([]AiproductdataenhancerGenerateProductDataRequestProductInformation, bool) {
	if o == nil || IsNil(o.ProductInformation) {
		return nil, false
	}
	return o.ProductInformation, true
}

// HasProductInformation returns a boolean if a field has been set.
func (o *AiproductdataenhancerGenerateProductDataRequest) HasProductInformation() bool {
	if o != nil && !IsNil(o.ProductInformation) {
		return true
	}

	return false
}

// SetProductInformation gets a reference to the given []AiproductdataenhancerGenerateProductDataRequestProductInformation and assigns it to the ProductInformation field.
func (o *AiproductdataenhancerGenerateProductDataRequest) SetProductInformation(v []AiproductdataenhancerGenerateProductDataRequestProductInformation) {
	o.ProductInformation = v
}

// GetProductDataToGenerate returns the ProductDataToGenerate field value if set, zero value otherwise.
func (o *AiproductdataenhancerGenerateProductDataRequest) GetProductDataToGenerate() []GenerateProductDataRequestProductDataToGenerate {
	if o == nil || IsNil(o.ProductDataToGenerate) {
		var ret []GenerateProductDataRequestProductDataToGenerate
		return ret
	}
	return o.ProductDataToGenerate
}

// GetProductDataToGenerateOk returns a tuple with the ProductDataToGenerate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiproductdataenhancerGenerateProductDataRequest) GetProductDataToGenerateOk() ([]GenerateProductDataRequestProductDataToGenerate, bool) {
	if o == nil || IsNil(o.ProductDataToGenerate) {
		return nil, false
	}
	return o.ProductDataToGenerate, true
}

// HasProductDataToGenerate returns a boolean if a field has been set.
func (o *AiproductdataenhancerGenerateProductDataRequest) HasProductDataToGenerate() bool {
	if o != nil && !IsNil(o.ProductDataToGenerate) {
		return true
	}

	return false
}

// SetProductDataToGenerate gets a reference to the given []GenerateProductDataRequestProductDataToGenerate and assigns it to the ProductDataToGenerate field.
func (o *AiproductdataenhancerGenerateProductDataRequest) SetProductDataToGenerate(v []GenerateProductDataRequestProductDataToGenerate) {
	o.ProductDataToGenerate = v
}

func (o AiproductdataenhancerGenerateProductDataRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AiproductdataenhancerGenerateProductDataRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.LanguageCode) {
		toSerialize["languageCode"] = o.LanguageCode
	}
	if !IsNil(o.ProductInformation) {
		toSerialize["productInformation"] = o.ProductInformation
	}
	if !IsNil(o.ProductDataToGenerate) {
		toSerialize["productDataToGenerate"] = o.ProductDataToGenerate
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AiproductdataenhancerGenerateProductDataRequest) UnmarshalJSON(data []byte) (err error) {
	varAiproductdataenhancerGenerateProductDataRequest := _AiproductdataenhancerGenerateProductDataRequest{}

	err = json.Unmarshal(data, &varAiproductdataenhancerGenerateProductDataRequest)

	if err != nil {
		return err
	}

	*o = AiproductdataenhancerGenerateProductDataRequest(varAiproductdataenhancerGenerateProductDataRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "tenantId")
		delete(additionalProperties, "languageCode")
		delete(additionalProperties, "productInformation")
		delete(additionalProperties, "productDataToGenerate")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAiproductdataenhancerGenerateProductDataRequest struct {
	value *AiproductdataenhancerGenerateProductDataRequest
	isSet bool
}

func (v NullableAiproductdataenhancerGenerateProductDataRequest) Get() *AiproductdataenhancerGenerateProductDataRequest {
	return v.value
}

func (v *NullableAiproductdataenhancerGenerateProductDataRequest) Set(val *AiproductdataenhancerGenerateProductDataRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAiproductdataenhancerGenerateProductDataRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAiproductdataenhancerGenerateProductDataRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAiproductdataenhancerGenerateProductDataRequest(val *AiproductdataenhancerGenerateProductDataRequest) *NullableAiproductdataenhancerGenerateProductDataRequest {
	return &NullableAiproductdataenhancerGenerateProductDataRequest{value: val, isSet: true}
}

func (v NullableAiproductdataenhancerGenerateProductDataRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAiproductdataenhancerGenerateProductDataRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
